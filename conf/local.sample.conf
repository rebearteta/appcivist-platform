play {
    # Secret key
    # ~~~~~
    # The secret key is used to secure cryptographics functions.
    # This must be changed for production, but we recommend not changing it in this file.
    # See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
    crypto {
        secret="tztQB2nX:t;03vn4Cb9SS6n/x44h651BDCrt4sOQACX<<fcf35cFgCvgDhg@iRR4"
    }
    
    # Evolutions
    # ~~~~~
    evolutions {
        db {
            default {
                autoApply=true
            }
        }
    }

    # The application languages
    # ~~~~~
    i18n {
        langs = [ "en", "en-US", "es", "es-ES", "it", "it-IT", "de", "de-DE", "fr", "fr-FR" ]
    }
    
    # Modules
    # ~~~~~
    modules {
        enabled += be.objectify.deadbolt.java.DeadboltModule
        enabled += modules.CustomDeadboltHook
    }
    
    http.parser.maxMemoryBuffer = 500kB
}

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
db {
    default {
        # You can expose this datasource via JNDI if needed (Useful for JPA)
        jndiName=DefaultDS
        
        # Specify a connectionTestQuery. Only do this if upgrading the JDBC-Driver does not help 
        #hikaricp {
        #    connectionTestQuery="SELECT TRUE"
        #}
    
        driver=org.h2.Driver   # Default driver
        url="jdbc:h2:mem:play" # Default URL
        username=""
        password=""
    }
}

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
ebean {
    default = ["models.*"]
}

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.
logger { 
    # Root logger:
    root=DEBUG
    # Logger used by the framework:
    play=DEBUG
    # Logger provided to your application:
    application=DEBUG
}

application {
   baseUrl="http://appcivist.littlemacondo.com/backend/api" # no longer works, but used for email invitations
   uiUrl="http://appcivist.littlemacondo.com/#" # no longer works, but used for email invitations
     
    # Router
    # ~~~~~
    # Define the Router object to use for this application.
    # This router will be looked up first when the application is starting up,
    # so make sure this is the entry point.
    # Furthermore, it's assumed your route file is named properly.
    # So for an application router like `conf/my.application.Router`,
    # you may need to define a router file `my.application.routes`.
    # Default to Routes in the root package (and `conf/routes`)
    # application.router=my.application.Routes
    
    # Global object class
    # ~~~~~
    # Define the Global object class for this application.
    # Default to Global in the root package.
    # application.global=Global
}

# Additional configuration parameters
# ~~~~~
# Some parameters specific to our project
appcivist {
    db {
        cleanBeforeStarting=false      # clean data in the database before we start
        loadTestUsers=true             # load testing users
        loadTestOrchestration=false     # load the orchestration test examples
        initial-data.files = [ "initial-data/appcivist-pb-basic-v2.yml", "initial-data/appcivist-pb-basic-voting.yml",  "initial-data/appcivist-pb-basic-voting-votes.yml" ]
    }
    
    dozer {
        mappingFiles = ["dozerMapping.xml"]
    }
    
    services {
        # Replace the following sample non-valid API secrets with correct ones
        mapboxapi {
            # Temporal token for MapBox API
            # Requests limit = 600 req/min
            token = ${?MAPBOX_API_TOKEN}   
        }
        
        imgur {
            clientId = ${?IMGUR_CLIENT_ID}
            clientSecret = ${?IMGUR_CLIENT_SECRET}
        }
        
        aws {
            access.key=${?AWS_ACCESS_KEY}
            secret.key=${?AWS_SECRET_CODE}
            s3.bucket=${?AWS_S3_BUCKET_NAME}
            s3.endpoint=${?AWS_S3_BUCKET_ENDPOINT}
        }
        
        etherpad {
            default {
                serverBaseurl = "http://etherpad.littlemacondo.com"
                apiKey = ${?ETHERPAD_API_KEY}
            }
        }
    }
    
    invitations {
        baseUrl = "http://appcivist.littlemacondo.com/#"
    }
}

default {
    language="en-US"
}

api {
    version="beta"
}

swagger { 
    api {
        basepath="http://localhost:9000"
    }
}

play.filters.cors {
  pathPrefixes = ["/"]
  allowedOrigins = null
  allowedHttpMethods = null
  allowedHttpHeaders = null
  preflightMaxAge = 3 days
}

include "play-authenticate/mine.local.conf"
include "play-authenticate/smtp.local.conf"   
include "play-authenticate/local.deadbolt.conf"
